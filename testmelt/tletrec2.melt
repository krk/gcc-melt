; -*- lisp -*-
;; file tletrec2.melt

#| run in buildir/gcc
 ./cc1 -fmelt=runfile  -fmelt-module-path=.    \
    -fmelt-source-path=.:$GCCMELTSOURCE/gcc/melt \
    -fmelt-tempdir=/tmp -fmelt-init=@warmelt2 \
    -fmelt-arg=$GCCMELTSOURCE/gcc/testsuite/melt/tletrec2.melt \
    -fmelt-debug empty-file-for-melt.c
|#

(defun badnormexptuple (recv env ncx psloc)
  (assert_msg "check tuple recv" (is_a recv class_source_tuple))
  (assert_msg "check env" (is_a env class_environment))
  (assert_msg "check nctxt" (is_a ncx class_normalization_context))
  (debug_msg recv "badnormexptuple recv")
  (let ( (sloc (unsafe_get_field :loca_location recv))
	 (sargs (unsafe_get_field :sargop_args recv))
	 (csym (clone_symbol 'tuple_))
	 (normdiscrmult (normal_predef discr_multiple ncx sloc "discr_multiple"))
	 )
    (multicall
     (nargs nbindings)
     (normalize_tuple sargs env ncx sloc)
     (debug_msg nargs "badnormexptuple nargs")
     (debug_msg nbindings "badnormexptuple nbindings")
     ;; insight: normalize (tuple x1 x2) exactly as 
     ;; as an anonymous letrec
     (letrec 
      (
       (constupbind (instance class_normal_constructed_tuple_binding
			      :binder csym
			      :nconsb_loc sloc
			      :nconsb_discr normdiscrmult
			      :nconsb_nletrec nletrec
			      :ntupb_comp nargs
			      ))
       (clocc (instance class_nrep_locsymocc
			:nrep_loc sloc
			:nocc_ctyp ctype_value
			:nocc_symb csym
			:nocc_bind constupbind))
       (tup1bind (tuple constupbind))
       (tup1loc (tuple clocc))
       (nbdy (tuple clocc))
       (nletrec (instance class_nrep_letrec
			  :nrep_loc sloc
			  :nlet_bindings tup1bind
			  :nlet_body nbdy
			  :nletrec_fill_bindings ()
			  :nletrec_body_bindings ()
			  :nletrec_locsyms tup1loc
			  ))
       )
      (compile_warning "badnormexptuple perhaps incomplete")
      (debug_msg nletrec "badnormexptuple return nletrec")
      (assert_msg "check nletrec's body" 
		  (== (get_field :nlet_body nletrec) nbdy))
      (debug_msg nbindings "badnormexptuple return nbindings")
      (return nletrec nbindings)
      )
     )))
;; eof tletrec2.melt