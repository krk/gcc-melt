; -*- lisp -*-
;; file tletrec3.melt

#| run in buildir/gcc
 ./cc1 -fmelt=runfile  -fmelt-module-path=.    \
    -fmelt-source-path=.:$GCCMELTSOURCE/gcc/melt \
    -fmelt-tempdir=/tmp -fmelt-init=@warmelt2 \
    -fmelt-arg=$GCCMELTSOURCE/gcc/testsuite/melt/tletrec3.melt \
    -fmelt-debug empty-file-for-melt.c
|#

(defclass class_abc
  :super class_root
  :fields (aa bb cc))

(defclass class_abcde
  :super class_abc
  :fields (dd ee))


(defprimitive checknonull (:cstring msg :value va) :void 
#{ int lin=__LINE__; 
   if (!$va) fatal_error(" [%s:%d] checknonull failed: %s",
			  lbasename(__FILE__),lin, $msg); }#)


(defun testlist (x y z)
  (letrec ( (li (list x y z)) 
	    )
	  li))

(debug_msg (testlist 'xx 'yy 'zz) "testlist")


(defun testtuple (x y z)
  (letrec ( (tu (tuple x y z (make_box discr_box tu))) 
	    )
	  tu))

(debug_msg (testtuple 'xx 'yy 'zz) "testtuple")


(defun testinstance1 (x y z)
  (letrec 
   ( (ob1 (instance class_abcde 
		   :aa x :bb ob1 :cc y :dd z
		   :ee (make_box discr_box x))) )
   (checknonull "check aa in ob1" (unsafe_get_field :aa ob1))
   ob1))

(debug_msg (testinstance1 'xx 'yy 'zz) "testinstance1")


(defun testletrec3 (x y)
  (letrec ( (tu (tuple x y li 
		       (make_integerbox discr_integer 123)))
	    (li (list x y 
		      (make_box discr_box tu)))
	    (ob (instance class_abcde
			  :aa tu 
			  :bb 'zzzz
			  :cc ob
			  :dd (instance class_container :container_value x)
			  :ee obcont))
	    (obcont (instance class_container :container_value ob))
	    )
	  (debug_msg obcont "testletrec3 obcont")
	  (checknonull "check aa in ob" (unsafe_get_field :aa ob))
	  (checknonull "check dd in ob" (unsafe_get_field :dd ob))
	  ob
	  ))

(debug_msg (testletrec3 'xxx 'yyy) "testletrec3")

;; eof tletrec3.melt