; -*- lisp -*-
;; file tmatch-6.melt

#| run in buildir/gcc
 ./cc1 -fmelt-mode=runfile  -fmelt-module-path=melt-stage3:.    -fmelt-source-path=melt-stage3:. \
    -fmelt-tempdir=/tmp -fmelt-init=@warmelt-3 \
    -fmelt-option=match_graphic=/tmp/melt6graph,alternate_match \
    -fmelt-arg=$GCCMELTSOURCE/gcc/testsuite/melt/tmatch-6.melt \
    -fmelt-debug empty-file-for-melt.c
|#

; this works
(defun testnameofsymbol (symb f g)
  (match symb 
	 (
	  ?(instance class_symbol :named_name  ?synam)
	   (f synam))
	 (
	  ?(instance class_container :container_value 
		     ?(and ?cval ?(integerbox_of ?_)))
	   (g cval))
	 ))
#|
(debug_msg (testnameofsymbol 'asymbol 
			     (lambda (s) (debug_msg s "testnamedbg")))
	   "testnameofsymbol asymbol")

(defun testnameofclassoffield (fld)
  (match fld 
         (?(instance class_field 
                     :fld_ownclass ?(instance class_class :named_name ?clanam))
           clanam)))

(debug_msg (testnameofclassoffield disc_sender) "testnameofclassoffield disc_sender")


;; (defun retrievename (nob)
;;  (match nob (?(instance class_named :named_name ?fnam)
;;            fnam)))

(defun testor2inst (obt)
  (match obt
         (?(or
           ?(instance class_class 
                      :named_name ?name)
           ?(instance class_keyword 
                      :named_name ?name)
           )
         (return name))))


(defun testnameof (obt)
  (match obt
	 (?(and
	    ?tob
	    ?(or
	      ?(instance class_class :named_name ?name)
	      ;; ?(instance class_field :named_name ?name)
	      ?(instance class_keyword :named_name ?name)
	      ?(instance class_container :container_value ?tob)
	      ))
	   (return name))))

(debug_msg (testnameof class_discriminant) "name of class class_discriminant")
;(debug_msg (testnameof fld_ownclass) "name of field fld_ownclass")
(debug_msg (testnameof :else) "name of keyword :else")
(debug_msg (testnameof 'asymbol) "fail name of asymbol")


(defun test_or (ob :long i)
  (match i
         ( ?(or ?(some_integer_multiple 3 ?jj)
                ?(some_integer_greater_than 7))
            (put_int ob jj)
           ob)
))


(debug_msg (test_or 'firstok 6) "test_or firstok")
(debug_msg (test_or 'secondok 10) "test_or secondok")
(debug_msg (test_or 'thirdfail 1) "test_or thirdfail")




;; iparse_field crash the MELT translator :-(
(defun iparse_field (iparser env)
  (assert_msg "check iparser" (is_a iparser class_infix_parser))
  (assert_msg "check env" (is_a env class_environment))
  (let ( (ctok (infix_peeklex iparser 0))
         )
    (match ctok
           (?(or
              ?(instance class_infix_symbol 
                         :loca_location ?fldloc

                         :lexeme_data  
                         ?(and ?sy 
                              ?(instance class_symbol 
                                         :named_name ?nm))

                         )
              ?(instance class_infix_keyword
                         :loca_location ?fldloc 

                         :lexeme_data
                         ?(instance class_keyword 
                                    :named_name ?nm)

                         ))
             (debug_msg fldloc "iparse_field fldloc")

             (if (null sy) (setq sy (create_symbolstr nm)))
             (let ( (fldbind (find_env env sy)) 
                    )
               (debug_msg fldbind "iparse_field fldbind")
               (match fldbind
                      (?(instance class_field_binding
                                  :flbind_field ?fld)
                        (infix_poplex iparser 1)
                        (debug_msg fld "iparse_field got straight field")
                        (return fld))
                      (?(instance class_value_binding
                                  :vbind_value
                                  ?(as ?fld ?(instance class_field)))
                        (infix_poplex iparser 1)
                        (debug_msg fld "iparse_field got value field")
                        (return fld))
                      (?_
                       (error_strv fldloc "incorrect infix field" nm)))
               )

             )
           (?(instance class_located :loca_location ?fldloc)
             (error_plain fldloc "expecting field in infix notation")))))
|#



;;; eof tmatch-6.melt
